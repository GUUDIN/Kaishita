{
  "version": 3,
  "sources": ["../../@epic-web/remember/index.js"],
  "sourcesContent": ["// Borrowed/modified from https://github.com/jenseng/abuse-the-platform/blob/2993a7e846c95ace693ce61626fa072174c8d9c7/app/utils/singleton.ts\n\n/**\n * Remembers and retrieves a value by a given name, or the value generated by `getValue` if the name doesn't exist.\n * The return type is inferred from the return type of `getValue`.\n *\n * @template Value\n * @param {string} name - The name under which to remember the value.\n * @param {() => Value} getValue - The function that generates the value to remember.\n * @returns {Value} - The remembered value.\n */\nexport function remember(name, getValue) {\n\tconst thusly = globalThis\n\tthusly.__remember_epic_web ??= new Map()\n\tif (!thusly.__remember_epic_web.has(name)) {\n\t\tthusly.__remember_epic_web.set(name, getValue())\n\t}\n\treturn thusly.__remember_epic_web.get(name)\n}\n\n/**\n * Forgets a remembered value by a given name. Does not throw if the name doesn't exist.\n *\n * @param {string} name - The name under which the value was remembered.\n * @return {boolean} - A remembered value existed and has been forgotten.\n */\nexport function forget(name) {\n\tconst thusly = globalThis\n\tthusly.__remember_epic_web ??= new Map()\n\treturn thusly.__remember_epic_web.delete(name)\n}\n"],
  "mappings": ";;;AAWO,SAAS,SAAS,MAAM,UAAU;AACxC,QAAM,SAAS;AACf,SAAO,wBAAP,OAAO,sBAAwB,oBAAI,IAAI;AACvC,MAAI,CAAC,OAAO,oBAAoB,IAAI,IAAI,GAAG;AAC1C,WAAO,oBAAoB,IAAI,MAAM,SAAS,CAAC;AAAA,EAChD;AACA,SAAO,OAAO,oBAAoB,IAAI,IAAI;AAC3C;AAQO,SAAS,OAAO,MAAM;AAC5B,QAAM,SAAS;AACf,SAAO,wBAAP,OAAO,sBAAwB,oBAAI,IAAI;AACvC,SAAO,OAAO,oBAAoB,OAAO,IAAI;AAC9C;",
  "names": []
}
